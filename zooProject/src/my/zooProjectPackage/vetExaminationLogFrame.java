/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * vetExaminationLogFrame.java
 *
 * Created on 02-Mar-2014, 22:42:29
 */

package my.zooProjectPackage;
import java.sql.*;
import javax.swing.JOptionPane;
/**
 *
 * @author patrick
 */
public class vetExaminationLogFrame extends javax.swing.JFrame {
    /** Creates new form vetExaminationLogFrame */

    PreparedStatement prest;

    public vetExaminationLogFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        animalExaminationLogPanel = new javax.swing.JPanel();
        getAnimalNameButton = new javax.swing.JButton();
        logExaminationButton = new javax.swing.JButton();
        notesScrollPane = new javax.swing.JScrollPane();
        notesTextArea = new javax.swing.JTextArea();
        animalNameLabel = new javax.swing.JLabel();
        animalNameText = new javax.swing.JTextField();
        animalIdLabel = new javax.swing.JLabel();
        notesLabel = new javax.swing.JLabel();
        nickNameText = new javax.swing.JTextField();
        nickNameLabel = new javax.swing.JLabel();
        animalIdExaminationLogComboBox = new javax.swing.JComboBox();
        staffIdExaminationLogComboBox = new javax.swing.JComboBox();
        staffIdLabel = new javax.swing.JLabel();
        getStaffNameLogButton = new javax.swing.JButton();
        staffNameText = new javax.swing.JTextField();
        staffNameLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        logOutButton = new javax.swing.JButton();
        backGroundImageLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Vet Examination Log Frame");
        setMinimumSize(new java.awt.Dimension(586, 498));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        animalExaminationLogPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Animal Examination Log", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(153, 153, 255))); // NOI18N
        animalExaminationLogPanel.setOpaque(false);

        getAnimalNameButton.setText("Get Animal Names:");
        getAnimalNameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getAnimalNameButtonActionPerformed(evt);
            }
        });

        logExaminationButton.setText("Log Examination");
        logExaminationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logExaminationButtonActionPerformed(evt);
            }
        });

        notesTextArea.setColumns(20);
        notesTextArea.setRows(5);
        notesScrollPane.setViewportView(notesTextArea);

        animalNameLabel.setBackground(new java.awt.Color(255, 255, 255));
        animalNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        animalNameLabel.setText("Name:");

        animalNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                animalNameTextActionPerformed(evt);
            }
        });

        animalIdLabel.setBackground(new java.awt.Color(255, 255, 255));
        animalIdLabel.setForeground(new java.awt.Color(255, 255, 255));
        animalIdLabel.setText("AnimalID:");

        notesLabel.setBackground(new java.awt.Color(0, 0, 0));
        notesLabel.setForeground(new java.awt.Color(255, 255, 255));
        notesLabel.setText("Notes:");

        nickNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        nickNameLabel.setText("Nickname:");

        animalIdExaminationLogComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Please Select..." }));

        staffIdExaminationLogComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Please Select..." }));
        staffIdExaminationLogComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffIdExaminationLogComboBoxActionPerformed(evt);
            }
        });

        staffIdLabel.setBackground(new java.awt.Color(255, 255, 255));
        staffIdLabel.setText("StaffID:");

        getStaffNameLogButton.setText("Get Staff Name:");
        getStaffNameLogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getStaffNameLogButtonActionPerformed(evt);
            }
        });

        staffNameLabel.setText("Name:");

        javax.swing.GroupLayout animalExaminationLogPanelLayout = new javax.swing.GroupLayout(animalExaminationLogPanel);
        animalExaminationLogPanel.setLayout(animalExaminationLogPanelLayout);
        animalExaminationLogPanelLayout.setHorizontalGroup(
            animalExaminationLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(animalExaminationLogPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(animalExaminationLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(animalExaminationLogPanelLayout.createSequentialGroup()
                        .addGroup(animalExaminationLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, animalExaminationLogPanelLayout.createSequentialGroup()
                                .addGroup(animalExaminationLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(animalIdLabel)
                                    .addComponent(animalNameLabel)
                                    .addComponent(nickNameLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(animalExaminationLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(animalIdExaminationLogComboBox, 0, 151, Short.MAX_VALUE)
                                    .addComponent(animalNameText, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                    .addComponent(getAnimalNameButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                    .addComponent(nickNameText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, animalExaminationLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(getStaffNameLogButton)
                                .addGroup(animalExaminationLogPanelLayout.createSequentialGroup()
                                    .addComponent(staffIdLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(staffIdExaminationLogComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, animalExaminationLogPanelLayout.createSequentialGroup()
                                    .addComponent(staffNameLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(staffNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(168, Short.MAX_VALUE))
                    .addGroup(animalExaminationLogPanelLayout.createSequentialGroup()
                        .addComponent(notesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(animalExaminationLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(logExaminationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(notesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE))
                        .addContainerGap())))
        );

        animalExaminationLogPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {animalIdLabel, animalNameLabel, nickNameLabel, notesLabel, staffIdLabel, staffNameLabel});

        animalExaminationLogPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {animalIdExaminationLogComboBox, animalNameText, getAnimalNameButton, getStaffNameLogButton, logExaminationButton, nickNameText, staffIdExaminationLogComboBox, staffNameText});

        animalExaminationLogPanelLayout.setVerticalGroup(
            animalExaminationLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(animalExaminationLogPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(animalExaminationLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(staffIdLabel)
                    .addComponent(staffIdExaminationLogComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(getStaffNameLogButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(animalExaminationLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staffNameLabel)
                    .addComponent(staffNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(animalExaminationLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(animalIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(animalIdExaminationLogComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(animalExaminationLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(animalExaminationLogPanelLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(animalNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nickNameLabel)
                        .addGap(1, 1, 1))
                    .addGroup(animalExaminationLogPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getAnimalNameButton, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(animalNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nickNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(animalExaminationLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(notesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                    .addGroup(animalExaminationLogPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(notesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logExaminationButton))
        );

        getContentPane().add(animalExaminationLogPanel);
        animalExaminationLogPanel.setBounds(80, 10, 400, 400);

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        getContentPane().add(backButton);
        backButton.setBounds(80, 420, 70, 23);

        logOutButton.setText("Log Out");
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });
        getContentPane().add(logOutButton);
        logOutButton.setBounds(390, 420, 90, 23);

        backGroundImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/babyElephant(edited).jpg"))); // NOI18N
        backGroundImageLabel.setMaximumSize(new java.awt.Dimension(700, 600));
        backGroundImageLabel.setMinimumSize(new java.awt.Dimension(586, 498));
        getContentPane().add(backGroundImageLabel);
        backGroundImageLabel.setBounds(0, 0, 570, 460);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-591)/2, (screenSize.height-500)/2, 591, 500);
    }// </editor-fold>//GEN-END:initComponents

    private void getAnimalNameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getAnimalNameButtonActionPerformed
        // This part deals with the Variables associated with the Database Connection
        String url = "jdbc:mysql://127.0.0.1:3306/";
        String dbName = "zooProject";
        String driver = "com.mysql.jdbc.Driver";
        String userName = "root";
        String password = "nss2013";


        // This parts tries to execute the SQL statement and if it can't relays a message
        // The first section is connecting the various variables to the statement to be exectuted
        try {
            Class.forName(driver).newInstance();
            Connection conn = DriverManager.getConnection(url + dbName, userName, password);
            System.out.println("Database Connection Successful");

            // Set up a create statement
            java.sql.Statement stmn = conn.createStatement();
            // Set Up SQL
            String sql = "SELECT * FROM ANIMAL WHERE ANIMAL_ID = " + animalIdExaminationLogComboBox.getSelectedItem();
            // Excute Query and send result set to rs
            ResultSet rs = stmn.executeQuery(sql);
            while (rs.next()) {
                // Retrieve by column name
                String COMMON_NAME = rs.getString("COMMON_NAME");
                String NICKNAME = rs.getString("NICKNAME");
                animalNameText.setText(COMMON_NAME);
                nickNameText.setText(NICKNAME);
            }
            // Close the connection to the database
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
}//GEN-LAST:event_getAnimalNameButtonActionPerformed

    private void logExaminationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logExaminationButtonActionPerformed
        // This part deals with the Variables associated with the Database Connection
        String url = "jdbc:mysql://127.0.0.1:3306/";
        String dbName = "zooProject";
        String driver = "com.mysql.jdbc.Driver";
        String userName = "root";
        String password = "nss2013";

        // This parts tries to execute the SQL statement and if it can't relays a message
        // The first section is connecting the various variables to the statement to be exectuted
        if(staffIdExaminationLogComboBox.getSelectedItem().equals("Please Select...") || animalIdExaminationLogComboBox.getSelectedItem().equals("Please Select..."))
        {
            JOptionPane.showMessageDialog(null, "Some fields not completed");
        }
        else
        {
            try {
                Class.forName(driver).newInstance();
                Connection conn = DriverManager.getConnection(url + dbName, userName, password);
                System.out.println("Database Connection Successful");

                // The actual SQL Statement to be executed.
                String sql = "INSERT INTO ANIMAL_HEALTH(STAFF_ID, SPECIES_EXAMINED, NOTES) VALUES(?, ?, ?)";

                prest = conn.prepareStatement(sql);
                prest.setString(1,(String) staffIdExaminationLogComboBox.getSelectedItem());
                prest.setString(2,(String) animalIdExaminationLogComboBox.getSelectedItem());
                prest.setString(3, notesTextArea.getText());

                // This part executes the statement and displays a Message Box if Susccessful
                prest.executeUpdate();
                JOptionPane.showMessageDialog(null, "Insert Successful");

                // Resetting of the various variables back to original state.
                staffIdExaminationLogComboBox.setSelectedItem("Please Select...");
                animalIdExaminationLogComboBox.setSelectedItem("Please Select...");
                animalNameText.setText("");
                nickNameText.setText("");
                staffNameText.setText("");


                // Close the connection to the database
                conn.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
}//GEN-LAST:event_logExaminationButtonActionPerformed

    private void animalNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_animalNameTextActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_animalNameTextActionPerformed

    private void getStaffNameLogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getStaffNameLogButtonActionPerformed
        // This part deals with the Variables associated with the Database Connection
        String url = "jdbc:mysql://127.0.0.1:3306/";
        String dbName = "zooProject";
        String driver = "com.mysql.jdbc.Driver";
        String userName = "root";
        String password = "nss2013";

        // This parts tries to execute the SQL statement and if it can't relays a message
        // The first section is connecting the various variables to the statement to be exectuted
        try {
            Class.forName(driver).newInstance();
            Connection conn = DriverManager.getConnection(url + dbName, userName, password);
            System.out.println("Database Connection Successful");

            // Set up a create statement
            java.sql.Statement stmn = conn.createStatement();
            // Set Up SQL
            String sql = "SELECT * FROM STAFF WHERE STAFF_ID = " + staffIdExaminationLogComboBox.getSelectedItem();
            // Excute Query and send result set to rs
            ResultSet rs = stmn.executeQuery(sql);
            while (rs.next()) {
                // Retrieve by column name
                String FIRST_NAME = rs.getString("FIRST_NAME");
                String LAST_NAME = rs.getString("LAST_NAME");
                staffNameText.setText(FIRST_NAME + " " + LAST_NAME);
            }
            // Close the connection to the database
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
}//GEN-LAST:event_getStaffNameLogButtonActionPerformed

    private void staffIdExaminationLogComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffIdExaminationLogComboBoxActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_staffIdExaminationLogComboBoxActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // This code creates a new frame object that when called, activates the desired frame.
        vetOptionsFrame frame = new vetOptionsFrame();
        frame.setVisible(true);
        setVisible(false);
}//GEN-LAST:event_backButtonActionPerformed

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        // When this button is clicked a New Frame Object called Frame is created & the User
        // is returned to the Main login Frame.
        loginFrame frame = new loginFrame();
        frame.setVisible(true);
        setVisible(false);
}//GEN-LAST:event_logOutButtonActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // Disables various textfields form being edited
        staffNameText.setEditable(false);
        animalNameText.setEditable(false);
        nickNameText.setEditable(false);

        // This part deals with the Variables associated with the Database Connection
        String url = "jdbc:mysql://127.0.0.1:3306/";
        String dbName = "zooProject";
        String driver = "com.mysql.jdbc.Driver";
        String userName = "root";
        String password = "nss2013";

        // This parts tries to execute the SQL statement and if it can't relays a message
        // The first section is connecting the various variables to the statement to be exectuted
        try {
            Class.forName(driver).newInstance();
            Connection conn = DriverManager.getConnection(url + dbName, userName, password);
            System.out.println("Database Connection Successful");
              // Set up a create statement
              java.sql.Statement stmn = conn.createStatement();
              // Set Up SQL
              String sql = "SELECT * FROM ANIMAL";
              // Excute Query and send result set to rs
              ResultSet rs = stmn.executeQuery(sql);
            while (rs.next()) {
                // Retrieve by column name
                String ANIMAL_ID = rs.getString("ANIMAL_ID");
                vetExaminationLogFrame.animalIdExaminationLogComboBox.addItem(ANIMAL_ID);
            }
            // Close the connection to the database
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }




        // This part is trying to execute a Select statement that will pre-populate the variouse dropdown lists associated with this frame
        try {
            Class.forName(driver).newInstance();
            Connection conn = DriverManager.getConnection(url + dbName, userName, password);
            System.out.println("Database Connection Successful");

                // Set up a create statement
              java.sql.Statement stmn = conn.createStatement();
              // Set Up SQL
              String sql = "SELECT * FROM STAFF WHERE TITLE = 'Vet'";
              // Excute Query and send result set to rs
              ResultSet rs = stmn.executeQuery(sql);
            while (rs.next()) {
                // Retrieve by column name
                String STAFF_ID = rs.getString("STAFF_ID");
                vetExaminationLogFrame.staffIdExaminationLogComboBox.addItem(STAFF_ID);
            }
            // Close the connection to the database
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowOpened

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new vetExaminationLogFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JPanel animalExaminationLogPanel;
    public static javax.swing.JComboBox animalIdExaminationLogComboBox;
    private javax.swing.JLabel animalIdLabel;
    private javax.swing.JLabel animalNameLabel;
    public static javax.swing.JTextField animalNameText;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel backGroundImageLabel;
    private javax.swing.JButton getAnimalNameButton;
    private javax.swing.JButton getStaffNameLogButton;
    private javax.swing.JButton logExaminationButton;
    private javax.swing.JButton logOutButton;
    private javax.swing.JLabel nickNameLabel;
    private javax.swing.JTextField nickNameText;
    private javax.swing.JLabel notesLabel;
    private javax.swing.JScrollPane notesScrollPane;
    private javax.swing.JTextArea notesTextArea;
    public static javax.swing.JComboBox staffIdExaminationLogComboBox;
    private javax.swing.JLabel staffIdLabel;
    private javax.swing.JLabel staffNameLabel;
    private javax.swing.JTextField staffNameText;
    // End of variables declaration//GEN-END:variables

}
