/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * newStaffEntryFrame.java
 *
 * Created on 03-Mar-2014, 13:25:15
 */

package my.zooProjectPackage;
import my.staffLibraryPackage.*;
import java.awt.Color;
import java.sql.*;
import javax.swing.JOptionPane;
/**
 *
 * @author hogan.38774
 */
public class newStaffEntryFrame extends javax.swing.JFrame {

    // Declaration of the prest variable used throughout this frame.
    private PreparedStatement prest;

    // declaration of the various objects used throughout this frame.
    vet v = new vet();
    manager m = new manager();
    cleanerFeeder cf = new cleanerFeeder();
    

    /** Creates new form newStaffEntryFrame */
    public newStaffEntryFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newStaffEntryPanel = new javax.swing.JPanel();
        lastNameLabel = new javax.swing.JLabel();
        firstNameLabel = new javax.swing.JLabel();
        jobDescText = new javax.swing.JTextField();
        lastNameText = new javax.swing.JTextField();
        TitleNewStaffEntryComboBox = new javax.swing.JComboBox();
        titleLabel = new javax.swing.JLabel();
        jobDescLabel = new javax.swing.JLabel();
        firstNameText = new javax.swing.JTextField();
        reportsToNewStaffEntryComboBox = new javax.swing.JComboBox();
        createNewStaffButton = new javax.swing.JButton();
        manIdLabel = new javax.swing.JLabel();
        reportToButton = new javax.swing.JButton();
        reportsToNameText = new javax.swing.JTextField();
        variableText = new javax.swing.JTextField();
        variableLabel = new javax.swing.JLabel();
        newStaffLoginDetailsPanel = new javax.swing.JPanel();
        newStaffIdLoginLabel = new javax.swing.JLabel();
        passwordLoginLabel = new javax.swing.JLabel();
        usernameLoginLabel = new javax.swing.JLabel();
        usernameLoginText = new javax.swing.JTextField();
        passwordLoginText = new javax.swing.JTextField();
        newStaffIdLoginText = new javax.swing.JTextField();
        commitLoginButton = new javax.swing.JButton();
        summaryButton = new javax.swing.JButton();
        newStaffResponsibilityPanel = new javax.swing.JPanel();
        newStaffIdRespText = new javax.swing.JTextField();
        commitRespButton = new javax.swing.JButton();
        isNewManagerLabel = new javax.swing.JLabel();
        newStaffIdRespLabel = new javax.swing.JLabel();
        habIdLabel = new javax.swing.JLabel();
        habitatNameText = new javax.swing.JTextField();
        isNewManagerComboBox = new javax.swing.JComboBox();
        habitatIdText = new javax.swing.JTextField();
        getManagerHabitatNameButton = new javax.swing.JButton();
        stepsCompletedPanel = new javax.swing.JPanel();
        stepsCompleted2Image = new javax.swing.JLabel();
        stepsCompleted2Label = new javax.swing.JLabel();
        stepsCompleted1Label = new javax.swing.JLabel();
        stepsCompleted3Image = new javax.swing.JLabel();
        stepsCompleted1Image = new javax.swing.JLabel();
        stepsCompleted3Label = new javax.swing.JLabel();
        step1Label = new javax.swing.JLabel();
        step2Label = new javax.swing.JLabel();
        step3Label = new javax.swing.JLabel();
        backToMenuButton = new javax.swing.JButton();
        logOutButton = new javax.swing.JButton();
        backGroundImageLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("New Staff Entry Frame");
        setMinimumSize(new java.awt.Dimension(810, 535));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        newStaffEntryPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "New Staff Entry", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(0, 153, 255))); // NOI18N
        newStaffEntryPanel.setToolTipText("");
        newStaffEntryPanel.setOpaque(false);

        lastNameLabel.setText("Last Name:");

        firstNameLabel.setText("First Name:");

        TitleNewStaffEntryComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Please Select..." }));
        TitleNewStaffEntryComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                TitleNewStaffEntryComboBoxItemStateChanged(evt);
            }
        });
        TitleNewStaffEntryComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TitleNewStaffEntryComboBoxActionPerformed(evt);
            }
        });

        titleLabel.setText("Title:");

        jobDescLabel.setText("Job Desc:");

        reportsToNewStaffEntryComboBox.setToolTipText("");
        reportsToNewStaffEntryComboBox.setAutoscrolls(true);
        reportsToNewStaffEntryComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                reportsToNewStaffEntryComboBoxItemStateChanged(evt);
            }
        });
        reportsToNewStaffEntryComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportsToNewStaffEntryComboBoxActionPerformed(evt);
            }
        });

        createNewStaffButton.setText("Create New Staff");
        createNewStaffButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createNewStaffButtonActionPerformed(evt);
            }
        });

        manIdLabel.setText("Man ID:");

        reportToButton.setText("Reports To:>");
        reportToButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportToButtonActionPerformed(evt);
            }
        });

        variableLabel.setForeground(new java.awt.Color(255, 255, 255));
        variableLabel.setText("TBA");

        javax.swing.GroupLayout newStaffEntryPanelLayout = new javax.swing.GroupLayout(newStaffEntryPanel);
        newStaffEntryPanel.setLayout(newStaffEntryPanelLayout);
        newStaffEntryPanelLayout.setHorizontalGroup(
            newStaffEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newStaffEntryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newStaffEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newStaffEntryPanelLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(firstNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(firstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newStaffEntryPanelLayout.createSequentialGroup()
                        .addGroup(newStaffEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newStaffEntryPanelLayout.createSequentialGroup()
                                .addComponent(jobDescLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(newStaffEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(newStaffEntryPanelLayout.createSequentialGroup()
                                        .addComponent(createNewStaffButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, Short.MAX_VALUE))
                                    .addComponent(jobDescText, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)))
                            .addGroup(newStaffEntryPanelLayout.createSequentialGroup()
                                .addGroup(newStaffEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(newStaffEntryPanelLayout.createSequentialGroup()
                                        .addComponent(titleLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(TitleNewStaffEntryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(newStaffEntryPanelLayout.createSequentialGroup()
                                        .addComponent(lastNameLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lastNameText, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))
                                    .addGroup(newStaffEntryPanelLayout.createSequentialGroup()
                                        .addComponent(manIdLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(reportsToNewStaffEntryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(reportToButton)
                                        .addGap(2, 2, 2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(newStaffEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(newStaffEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(variableText)
                                        .addComponent(reportsToNameText, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))
                                    .addComponent(variableLabel))))
                        .addGap(97, 97, 97))))
        );

        newStaffEntryPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {TitleNewStaffEntryComboBox, firstNameText, lastNameText});

        newStaffEntryPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {firstNameLabel, jobDescLabel, lastNameLabel, manIdLabel, titleLabel});

        newStaffEntryPanelLayout.setVerticalGroup(
            newStaffEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newStaffEntryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newStaffEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(newStaffEntryPanelLayout.createSequentialGroup()
                        .addGroup(newStaffEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstNameLabel)
                            .addComponent(firstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(newStaffEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lastNameLabel)
                            .addComponent(lastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(variableLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newStaffEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleLabel)
                    .addComponent(TitleNewStaffEntryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(variableText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newStaffEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(manIdLabel)
                    .addComponent(reportsToNewStaffEntryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reportToButton, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reportsToNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newStaffEntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jobDescLabel)
                    .addComponent(jobDescText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(createNewStaffButton)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        getContentPane().add(newStaffEntryPanel);
        newStaffEntryPanel.setBounds(20, 30, 410, 228);

        newStaffLoginDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "New Staff Entry", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(0, 153, 255))); // NOI18N
        newStaffLoginDetailsPanel.setToolTipText("");
        newStaffLoginDetailsPanel.setOpaque(false);

        newStaffIdLoginLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        newStaffIdLoginLabel.setForeground(new java.awt.Color(255, 255, 255));
        newStaffIdLoginLabel.setText("New Staff ID:");

        passwordLoginLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        passwordLoginLabel.setForeground(new java.awt.Color(255, 255, 255));
        passwordLoginLabel.setText("Password:");

        usernameLoginLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        usernameLoginLabel.setForeground(new java.awt.Color(255, 255, 255));
        usernameLoginLabel.setText("Username:");

        commitLoginButton.setText("Commit");
        commitLoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commitLoginButtonActionPerformed(evt);
            }
        });

        summaryButton.setText("Summary");
        summaryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                summaryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newStaffLoginDetailsPanelLayout = new javax.swing.GroupLayout(newStaffLoginDetailsPanel);
        newStaffLoginDetailsPanel.setLayout(newStaffLoginDetailsPanelLayout);
        newStaffLoginDetailsPanelLayout.setHorizontalGroup(
            newStaffLoginDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newStaffLoginDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newStaffLoginDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(passwordLoginLabel)
                    .addComponent(usernameLoginLabel)
                    .addComponent(newStaffIdLoginLabel))
                .addGap(18, 18, 18)
                .addGroup(newStaffLoginDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newStaffLoginDetailsPanelLayout.createSequentialGroup()
                        .addComponent(commitLoginButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(summaryButton))
                    .addGroup(newStaffLoginDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(newStaffIdLoginText, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(usernameLoginText, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                        .addComponent(passwordLoginText)))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        newStaffLoginDetailsPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {newStaffIdLoginLabel, passwordLoginLabel, usernameLoginLabel});

        newStaffLoginDetailsPanelLayout.setVerticalGroup(
            newStaffLoginDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newStaffLoginDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newStaffLoginDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newStaffIdLoginLabel)
                    .addComponent(newStaffIdLoginText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newStaffLoginDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameLoginLabel)
                    .addComponent(usernameLoginText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newStaffLoginDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLoginLabel)
                    .addComponent(passwordLoginText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(newStaffLoginDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(commitLoginButton)
                    .addComponent(summaryButton))
                .addContainerGap())
        );

        getContentPane().add(newStaffLoginDetailsPanel);
        newStaffLoginDetailsPanel.setBounds(440, 30, 330, 228);

        newStaffResponsibilityPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "New Staff Entry", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(0, 153, 255))); // NOI18N
        newStaffResponsibilityPanel.setOpaque(false);

        commitRespButton.setText("Commit");
        commitRespButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commitRespButtonActionPerformed(evt);
            }
        });

        isNewManagerLabel.setText("Is new Manager:");

        newStaffIdRespLabel.setText("New Staff ID:");

        habIdLabel.setText("Hab ID:");

        isNewManagerComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Please Select..." }));

        getManagerHabitatNameButton.setText("Name>");
        getManagerHabitatNameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getManagerHabitatNameButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newStaffResponsibilityPanelLayout = new javax.swing.GroupLayout(newStaffResponsibilityPanel);
        newStaffResponsibilityPanel.setLayout(newStaffResponsibilityPanelLayout);
        newStaffResponsibilityPanelLayout.setHorizontalGroup(
            newStaffResponsibilityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newStaffResponsibilityPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newStaffResponsibilityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newStaffIdRespLabel)
                    .addComponent(isNewManagerLabel)
                    .addComponent(habIdLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newStaffResponsibilityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newStaffResponsibilityPanelLayout.createSequentialGroup()
                        .addComponent(habitatIdText, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getManagerHabitatNameButton, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(habitatNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(newStaffResponsibilityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(isNewManagerComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newStaffIdRespText, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                        .addComponent(commitRespButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        newStaffResponsibilityPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {isNewManagerLabel, newStaffIdRespLabel});

        newStaffResponsibilityPanelLayout.setVerticalGroup(
            newStaffResponsibilityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newStaffResponsibilityPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newStaffResponsibilityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(habIdLabel)
                    .addComponent(habitatIdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(getManagerHabitatNameButton)
                    .addComponent(habitatNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newStaffResponsibilityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newStaffIdRespLabel)
                    .addComponent(newStaffIdRespText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newStaffResponsibilityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(isNewManagerLabel)
                    .addComponent(isNewManagerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(commitRespButton)
                .addContainerGap())
        );

        getContentPane().add(newStaffResponsibilityPanel);
        newStaffResponsibilityPanel.setBounds(20, 290, 410, 190);

        stepsCompletedPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Steps Completed", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 16), new java.awt.Color(0, 153, 255))); // NOI18N
        stepsCompletedPanel.setOpaque(false);

        stepsCompleted2Image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/greenTickImage(PNG).png"))); // NOI18N

        stepsCompleted2Label.setForeground(new java.awt.Color(255, 255, 255));
        stepsCompleted2Label.setText("Step 2:");

        stepsCompleted1Label.setForeground(new java.awt.Color(255, 255, 255));
        stepsCompleted1Label.setText("Step 1:");

        stepsCompleted3Image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/greenTickImage(PNG).png"))); // NOI18N

        stepsCompleted1Image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/greenTickImage(PNG).png"))); // NOI18N

        stepsCompleted3Label.setForeground(new java.awt.Color(255, 255, 255));
        stepsCompleted3Label.setText("Step 3:");

        javax.swing.GroupLayout stepsCompletedPanelLayout = new javax.swing.GroupLayout(stepsCompletedPanel);
        stepsCompletedPanel.setLayout(stepsCompletedPanelLayout);
        stepsCompletedPanelLayout.setHorizontalGroup(
            stepsCompletedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stepsCompletedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(stepsCompletedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(stepsCompletedPanelLayout.createSequentialGroup()
                        .addComponent(stepsCompleted1Label)
                        .addGap(18, 18, 18)
                        .addComponent(stepsCompleted1Image))
                    .addGroup(stepsCompletedPanelLayout.createSequentialGroup()
                        .addComponent(stepsCompleted2Label)
                        .addGap(18, 18, 18)
                        .addComponent(stepsCompleted2Image))
                    .addGroup(stepsCompletedPanelLayout.createSequentialGroup()
                        .addComponent(stepsCompleted3Label)
                        .addGap(18, 18, 18)
                        .addComponent(stepsCompleted3Image)))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        stepsCompletedPanelLayout.setVerticalGroup(
            stepsCompletedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stepsCompletedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(stepsCompletedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(stepsCompleted1Image)
                    .addComponent(stepsCompleted1Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(stepsCompletedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(stepsCompleted2Image)
                    .addComponent(stepsCompleted2Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(stepsCompletedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(stepsCompleted3Image)
                    .addComponent(stepsCompleted3Label))
                .addContainerGap())
        );

        getContentPane().add(stepsCompletedPanel);
        stepsCompletedPanel.setBounds(440, 290, 160, 133);

        step1Label.setFont(new java.awt.Font("Tahoma", 1, 12));
        step1Label.setForeground(new java.awt.Color(255, 255, 255));
        step1Label.setText("Step 1:");
        getContentPane().add(step1Label);
        step1Label.setBounds(30, 10, 50, 15);

        step2Label.setFont(new java.awt.Font("Tahoma", 1, 12));
        step2Label.setForeground(new java.awt.Color(255, 255, 255));
        step2Label.setText("Step 2:");
        getContentPane().add(step2Label);
        step2Label.setBounds(30, 270, 50, 15);

        step3Label.setFont(new java.awt.Font("Tahoma", 1, 12));
        step3Label.setForeground(new java.awt.Color(255, 255, 255));
        step3Label.setText("Step 3:");
        getContentPane().add(step3Label);
        step3Label.setBounds(450, 10, 50, 15);

        backToMenuButton.setText("Back To Menu");
        backToMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToMenuButtonActionPerformed(evt);
            }
        });
        getContentPane().add(backToMenuButton);
        backToMenuButton.setBounds(610, 300, 140, 30);

        logOutButton.setText("Log Out");
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });
        getContentPane().add(logOutButton);
        logOutButton.setBounds(610, 370, 140, 30);

        backGroundImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Meerkat_feb_09(resized&edited).jpg"))); // NOI18N
        getContentPane().add(backGroundImageLabel);
        backGroundImageLabel.setBounds(0, 0, 800, 500);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-813)/2, (screenSize.height-538)/2, 813, 538);
    }// </editor-fold>//GEN-END:initComponents

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        // When this button is clicked a New Frame Object called Frame is created & the User
        // is returned to the Main login Frame.
        loginFrame frame = new loginFrame();
        frame.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_logOutButtonActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // Sets mentioned variables to not-editable
        newStaffIdRespText.setEditable(false);
        newStaffIdLoginText.setEditable(false);
        habitatNameText.setEditable(false);
        reportsToNameText.setEditable(false);
        usernameLoginText.setEditable(false);
        passwordLoginText.setEditable(false);
        stepsCompleted1Image.setVisible(false);
        stepsCompleted2Image.setVisible(false);
        stepsCompleted3Image.setVisible(false);
        commitLoginButton.setEnabled(false);
        commitRespButton.setEnabled(false);
        habitatIdText.setEditable(false);
        isNewManagerComboBox.setEditable(false);
        getManagerHabitatNameButton.setVisible(false);
        variableText.setVisible(false);
        variableLabel.setVisible(false);
        reportsToNameText.setText("");
        step1Label.setForeground(Color.red);


        // This part deals with the Variables associated with the Database Connection
        String url = "jdbc:mysql://127.0.0.1:3306/";
        String dbName = "zooProject";
        String driver = "com.mysql.jdbc.Driver";
        String userName = "root";
        String password = "nss2013";

        // This parts tries to execute the SQL statement and if it can't relays a message
        // The first section is connecting the various variables to the statement to be exectuted
        try {
            Class.forName(driver).newInstance();

            System.out.println("Connecting to the Database " + dbName + "....");
            Connection conn = DriverManager.getConnection(url + dbName, userName, password);
            System.out.println("Database Connection Successful");

                // Set up a create statement
              java.sql.Statement stmn = conn.createStatement();
              // Set Up SQL
              String sql = "SELECT * FROM STAFF GROUP BY TITLE";
              // Excute Query and send result set to rs
              ResultSet rs = stmn.executeQuery(sql);
            while (rs.next()) {
                // Retrieve by column name
                String TITLE = rs.getString("TITLE");
                TitleNewStaffEntryComboBox.addItem(TITLE);
            }
            // Close the connection to the database
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }


         try {
            Class.forName(driver).newInstance();
            Connection conn = DriverManager.getConnection(url + dbName, userName, password);

                // Set up a create statement
              java.sql.Statement stmn = conn.createStatement();
              // Set Up SQL
              String sql =  "SELECT * FROM STAFF WHERE TITLE = 'Manager'";
              // Excute Query and send result set to rs
              ResultSet rs = stmn.executeQuery(sql);
            while (rs.next()) {
                // Retrieve by column name
                String STAFF_ID = rs.getString("STAFF_ID");
                reportsToNewStaffEntryComboBox.addItem(STAFF_ID);
                reportsToNameText.setText(STAFF_ID);
                reportsToNewStaffEntryComboBox.setSelectedItem(null);
                reportsToNameText.setText("");
            }
            // Close the connection to the database
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }



        try {
            Class.forName(driver).newInstance();
            Connection conn = DriverManager.getConnection(url + dbName, userName, password);

                // Set up a create statement
              java.sql.Statement stmn = conn.createStatement();
              // Set Up SQL
              String sql = "SELECT DISTINCT HAB_MANAGED_BY FROM STAFF_HAB_RESPONSIBILITY";
              // Excute Query and send result set to rs
              ResultSet rs = stmn.executeQuery(sql);
            while (rs.next()) {
                // Retrieve by column name
                String HAB_MANAGED_BY = rs.getString("HAB_MANAGED_BY");
                isNewManagerComboBox.addItem(HAB_MANAGED_BY);
                
            }
            // Close the connection to the database
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }




        try {
            Class.forName(driver).newInstance();
            Connection conn = DriverManager.getConnection(url + dbName, userName, password);

                // Set up a create statement
              java.sql.Statement stmn = conn.createStatement();
              // Set Up SQL
              String sql = "SELECT * FROM ZOO_HABITAT";
              // Excute Query and send result set to rs
              ResultSet rs = stmn.executeQuery(sql);
            while (rs.next()) {
                // Retrieve by column name
                String HABITAT_ID = rs.getString("HABITAT_ID");
                habitatIdText.setText(HABITAT_ID);
                habitatIdText.setText("");
            }
            // Close the connection to the database
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_formWindowOpened

    private void reportsToNewStaffEntryComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_reportsToNewStaffEntryComboBoxItemStateChanged

    }//GEN-LAST:event_reportsToNewStaffEntryComboBoxItemStateChanged

    private void reportToButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportToButtonActionPerformed
        // This part deals with the Variables associated with the Database Connection
        String url = "jdbc:mysql://127.0.0.1:3306/";
        String dbName = "zooProject";
        String driver = "com.mysql.jdbc.Driver";
        String userName = "root";
        String password = "nss2013";

        // This parts tries to execute the SQL statement and if it can't relays a message
        // The first section is connecting the various variables to the statement to be exectuted
        try {
            Class.forName(driver).newInstance();
            Connection conn = DriverManager.getConnection(url + dbName, userName, password);
            System.out.println("Database Connection Successful");

            // Set up a create statement
            java.sql.Statement stmn = conn.createStatement();
            // Set Up SQL
            String sql = "SELECT * FROM STAFF WHERE STAFF_ID = " + reportsToNewStaffEntryComboBox.getSelectedItem();
            // Excute Query and send result set to rs
            ResultSet rs = stmn.executeQuery(sql);
            while (rs.next()) {
                // Retrieve by column name
                String FIRST_NAME = rs.getString("FIRST_NAME");
                String LAST_NAME = rs.getString("LAST_NAME");
                reportsToNameText.setText(FIRST_NAME + " " + LAST_NAME);
            }
            // Close the connection to the database
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_reportToButtonActionPerformed

    private void reportsToNewStaffEntryComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsToNewStaffEntryComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reportsToNewStaffEntryComboBoxActionPerformed

    private void createNewStaffButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNewStaffButtonActionPerformed
        // This part deals with the Variables associated with the Database Connection
        String url = "jdbc:mysql://127.0.0.1:3306/";
        String dbName = "zooProject";
        String driver = "com.mysql.jdbc.Driver";
        String userName = "root";
        String password = "nss2013";

        // This parts tries to execute the SQL statement and if it can't, relays a message
        // The first section is connecting the various variables to the statement to be exectuted
        try {
            Class.forName(driver).newInstance();

            System.out.println("Connecting to the Database " + dbName + "....");
            Connection conn = DriverManager.getConnection(url + dbName, userName, password);
            System.out.println("Database Connection Successful");


            String sql = "INSERT INTO STAFF(FIRST_NAME, LAST_NAME, TITLE, REPORTS_TO, JOB_DESC)" +
                         " VALUES(?, ?, ?, ?, ?)";

            if(TitleNewStaffEntryComboBox.getSelectedItem().equals("Manager"))
            {                
                m.setFirstName(firstNameText.getText());
                m.setLastName(lastNameText.getText());
                m.setTitle(TitleNewStaffEntryComboBox.getSelectedItem().toString());
                m.setReportsTo((String) reportsToNewStaffEntryComboBox.getSelectedItem());
                m.setJobDescription(jobDescText.getText());

                prest = conn.prepareStatement(sql);
                prest.setString(1, m.getFirstName());
                prest.setString(2, m.getLastName());
                prest.setString(3, m.getTitle());

                if(reportsToNewStaffEntryComboBox == null)
                {
                    prest.setNull(4, java.sql.Types.INTEGER);
                }
                else
                {
                    prest.setString(4, m.getReportsTo());
                }

                if(jobDescText.getText().equals(""))
                {
                    prest.setNull(5, java.sql.Types.VARCHAR);
                }
                else
                {
                    prest.setString(5, m.getJobDescription());
                }
                prest.executeUpdate();
                JOptionPane.showMessageDialog(null, "A New " + m.getTitle() + ", " + m.getFirstName() + " " + m.getLastName() + " Has been Added to the Database. \n" +
                                                    "Please Review the details in Step 2, Assign a Habitat and Click commit");
            }
            else if(TitleNewStaffEntryComboBox.getSelectedItem().equals("CleanerFeeder"))
            {
                cf.setFirstName(firstNameText.getText());
                cf.setLastName(lastNameText.getText());
                cf.setTitle(TitleNewStaffEntryComboBox.getSelectedItem().toString());
                cf.setReportsTo(reportsToNewStaffEntryComboBox.getSelectedItem().toString());
                cf.setJobDescription(jobDescText.getText());
                
                prest = conn.prepareStatement(sql);
                prest.setString(1, cf.getFirstName());
                prest.setString(2, cf.getLastName());
                prest.setString(3, cf.getTitle());
                prest.setString(4, cf.getReportsTo());
                if(jobDescText.getText().equals(""))
                {
                    prest.setNull(5, java.sql.Types.VARCHAR);
                }
                else
                {
                    prest.setString(5, cf.getJobDescription());
                }
                prest.executeUpdate();
                JOptionPane.showMessageDialog(null, "A New " + cf.getTitle() + ", " + cf.getFirstName() + " " + cf.getLastName() + " Has been Added to the Database. \n" +
                                                    "Please Review the details in Step 2 and Click commit");
            }
            else if(TitleNewStaffEntryComboBox.getSelectedItem().equals("Vet"))
            {
                v.setFirstName(firstNameText.getText());
                v.setLastName(lastNameText.getText());
                v.setTitle(TitleNewStaffEntryComboBox.getSelectedItem().toString());
                v.setReportsTo(reportsToNewStaffEntryComboBox.getSelectedItem().toString());
                v.setJobDescription(jobDescText.getText());
                
                prest = conn.prepareStatement(sql);
                prest.setString(1, v.getFirstName());
                prest.setString(2, v.getLastName());
                prest.setString(3, v.getTitle());
                prest.setString(4, v.getReportsTo());
                if(jobDescText.getText().equals(""))
                {
                    prest.setNull(5, java.sql.Types.VARCHAR);
                }
                else
                {
                    prest.setString(5, cf.getJobDescription());
                }
                prest.executeUpdate();
                JOptionPane.showMessageDialog(null, "A New " + v.getTitle() + ", " + v.getFirstName() + " " + v.getLastName() + " Has been Added to the Database. \n" +
                                                    "Please Review the details in Step 2 and Click commit");
            }

            if(TitleNewStaffEntryComboBox.getSelectedItem().equals("Manager"))
            {
                getManagerHabitatNameButton.setVisible(true);
                habitatIdText.setEditable(true);
                habitatNameText.setEditable(true);
                isNewManagerComboBox.setEnabled(false);
                isNewManagerComboBox.setSelectedItem("Yes");
                commitRespButton.setEnabled(true);
            }
            else
            {
                getManagerHabitatNameButton.setVisible(false);
                habitatIdText.setEditable(false);
                habitatNameText.setEditable(false);
                isNewManagerComboBox.setEnabled(false);
                isNewManagerComboBox.setSelectedItem("No");
            }
                   
            stepsCompleted1Image.setVisible(true);
            step1Label.setForeground(Color.black);
            step2Label.setForeground(Color.red);
            commitRespButton.setEnabled(true);

            // Close the connection to the database
            prest.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }


        try {
            Class.forName(driver).newInstance();
            Connection conn = DriverManager.getConnection(url + dbName, userName, password);
            System.out.println("Database Connection Successful");

            // Set up a create statement
            java.sql.Statement stmn = conn.createStatement();
            // Set Up SQL
            String sql = "SELECT ZH.HABITAT_ID, S.STAFF_ID, S.FIRST_NAME, S.LAST_NAME, S.TITLE, ZH.ZOO_HAB, SHR.HAB_MANAGED_BY  " +
                    "FROM ZOO_HABITAT AS ZH " +
                    "INNER JOIN STAFF_HAB_RESPONSIBILITY AS SHR " +
                    "ON ZH.HABITAT_ID = SHR.HABITAT_ID " +
                    "INNER JOIN STAFF AS S " +
                    "ON SHR.STAFF_ID = S.STAFF_ID WHERE S.STAFF_ID = " + reportsToNewStaffEntryComboBox.getSelectedItem();

            // Excute Query and send result set to rs
            ResultSet rs = stmn.executeQuery(sql);
            while (rs.next()) {
                // Retrieve by column name
                //String STAFF_ID = rs.getString("S.STAFF_ID");
                String HABITAT_ID = rs.getString("ZH.HABITAT_ID");
                String ZOO_HAB = rs.getString("ZH.ZOO_HAB");
                habitatIdText.setText(HABITAT_ID);
                habitatNameText.setText(ZOO_HAB);
            }
            // Close the connection to the database
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }


            reportsToNewStaffEntryComboBox.setSelectedItem(null);
            TitleNewStaffEntryComboBox.setEnabled(false);
            reportsToNewStaffEntryComboBox.setEnabled(false);
            reportToButton.setEnabled(false);
            createNewStaffButton.setEnabled(false);
            firstNameText.setEditable(false);
            lastNameText.setEditable(false);
            jobDescText.setEditable(false);
            reportsToNameText.setEditable(false);


        try {
            Class.forName(driver).newInstance();
            Connection conn = DriverManager.getConnection(url + dbName, userName, password);
            System.out.println("Database Connection Successful");

            // Set up a create statement
            java.sql.Statement stmn = conn.createStatement();
            // Set Up SQL
            String sql = "SELECT STAFF_ID, FIRST_NAME, LAST_NAME, TITLE, REPORTS_TO, JOB_DESC " +
                         "FROM STAFF " +
                         "WHERE STAFF_ID = (SELECT MAX(STAFF_ID) FROM STAFF)";
            // Excute Query and send result set to rs
            ResultSet rs = stmn.executeQuery(sql);
            while (rs.next()) {
                // Retrieve by column name
                String STAFF_ID = rs.getString("STAFF_ID");
                newStaffIdRespText.setText(STAFF_ID);
                newStaffIdLoginText.setText(STAFF_ID); 
            }
            // Close the connection to the database
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_createNewStaffButtonActionPerformed

    private void TitleNewStaffEntryComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_TitleNewStaffEntryComboBoxItemStateChanged
        // Executes various sections of code depending on what value is inside the comboBox
        if (TitleNewStaffEntryComboBox.getSelectedItem().equals("Manager"))
        {
            reportsToNewStaffEntryComboBox.setEnabled(false);
            reportToButton.setEnabled(false);
        }
        else
        {
            reportsToNewStaffEntryComboBox.setEnabled(true);
            reportToButton.setEnabled(true);
        }


        
        if(TitleNewStaffEntryComboBox.getSelectedItem().equals("Vet"))
        {
            variableText.setVisible(true);
            variableLabel.setText("Speciality");
            variableLabel.setVisible(true);
        }
        else if(TitleNewStaffEntryComboBox.getSelectedItem().equals("CleanerFeeder"))
        {
            variableText.setVisible(true);
            variableLabel.setText("Cleaning products");
            variableLabel.setVisible(true);
        }
        else
        {
            variableText.setVisible(false);
            variableLabel.setVisible(false);
        }

    }//GEN-LAST:event_TitleNewStaffEntryComboBoxItemStateChanged

    private void getManagerHabitatNameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getManagerHabitatNameButtonActionPerformed
        // Excutes code depending on what value is inside the comboBox
        // Will display a message if any issue arises
        if(habitatIdText.getText().equals("1"))
        {
            habitatNameText.setText("African-Savanna");
        }
        else if(habitatIdText.getText().equals("2"))
        {
            habitatNameText.setText("Kaziranga Forest Trail");
        }
        else if(habitatIdText.getText().equals("3"))
        {
            habitatNameText.setText("Asian Forests");
        }
        else if(habitatIdText.getText().equals("4"))
        {
            habitatNameText.setText("Gorilla Rainforest");
        }
        else if(habitatIdText.getText().equals("5"))
        {
            habitatNameText.setText("Penguin Habitat");
        }
        else if(habitatIdText.getText().equals("6"))
        {
            habitatNameText.setText("South American House");
        }
        else if(habitatIdText.getText().equals("7"))
        {
            habitatNameText.setText("Roberts House");
        }
        else if(habitatIdText.getText().equals("8"))
        {
            habitatNameText.setText("House Of Reptiles");
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please Enter a Habitat ID between 1-8");
            habitatIdText.setText("");
            habitatNameText.setText("");

        }
    }//GEN-LAST:event_getManagerHabitatNameButtonActionPerformed

    private void commitRespButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commitRespButtonActionPerformed
        // This part deals with the Variables associated with the Database Connection
        String url = "jdbc:mysql://127.0.0.1:3306/";
        String dbName = "zooProject";
        String driver = "com.mysql.jdbc.Driver";
        String userName = "root";
        String password = "nss2013";

        // This parts tries to execute the SQL statement and if it can't relays a message
        // The first section is connecting the various variables to the statement to be exectuted
        try {
            Class.forName(driver).newInstance();

            System.out.println("Connecting to the Database " + dbName + "....");
            Connection conn = DriverManager.getConnection(url + dbName, userName, password);
            System.out.println("Database Connection Successful");

            String sql = "INSERT INTO STAFF_HAB_RESPONSIBILITY(HABITAT_ID, STAFF_ID, HAB_MANAGED_BY)" +
                         " VALUES(?, ?, ?)";

            if(TitleNewStaffEntryComboBox.getSelectedItem().equals("Manager"))
            {
                m.setHabitatID(Integer.parseInt(habitatIdText.getText()));
                m.setNewStaffID(Integer.parseInt(newStaffIdRespText.getText()));
                m.setManagesArea(isNewManagerComboBox.getSelectedItem().toString());
                

                prest = conn.prepareStatement(sql);
                prest.setInt(1, m.getHabitatID());
                prest.setInt(2, m.getNewStaffID());
                prest.setString(3, m.getManagesArea());
                prest.executeUpdate();

                JOptionPane.showMessageDialog(null, "New Responsibilities for " + m.getFirstName() + " " + m.getLastName() + " have been updated. \n" +
                                                    "Please Move to Step 3, Login Details");
            }
            else if(TitleNewStaffEntryComboBox.getSelectedItem().equals("Vet"))
            {
                v.setHabitatID(Integer.parseInt(habitatIdText.getText()));
                v.setNewStaffID(Integer.parseInt(newStaffIdRespText.getText()));
                v.setManagesArea(isNewManagerComboBox.getSelectedItem().toString());

                prest = conn.prepareStatement(sql);
                prest.setInt(1, v.getHabitatID());
                prest.setInt(2, v.getNewStaffID());
                prest.setString(3, v.getManagesArea());
                prest.executeUpdate();

                JOptionPane.showMessageDialog(null, "New Responsibilities for " + v.getFirstName() + " " + v.getLastName() + " have been updated. \n" +
                                                    "Please Move to Step 3, Login Details");
            }
            else
            {
                cf.setHabitatID(Integer.parseInt(habitatIdText.getText()));
                cf.setNewStaffID(Integer.parseInt(newStaffIdRespText.getText()));
                cf.setManagesArea(isNewManagerComboBox.getSelectedItem().toString());

                prest = conn.prepareStatement(sql);
                prest.setInt(1, cf.getHabitatID());
                prest.setInt(2, cf.getNewStaffID());
                prest.setString(3, cf.getManagesArea());
                prest.executeUpdate();

                JOptionPane.showMessageDialog(null, "New Responsibilities for " + cf.getFirstName() + " " + cf.getLastName() + " have been updated. \n" +
                                                    "Please Move to Step 3, Login Details");
            }


            stepsCompleted2Image.setVisible(true);
            step2Label.setForeground(Color.black);
            step3Label.setForeground(Color.red);

            // Close the connection to the database
            prest.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

        habitatIdText.setEditable(false);
        habitatNameText.setEditable(false);
        isNewManagerComboBox.setEnabled(false);        
        newStaffIdRespText.setEditable(false);
        commitRespButton.setEnabled(false);
        usernameLoginText.setEditable(true);
        passwordLoginText.setEditable(true);
        commitLoginButton.setEnabled(true);

        if(getManagerHabitatNameButton.isVisible())
        {
            getManagerHabitatNameButton.setEnabled(false);
            habitatIdText.setEditable(false);
            habitatNameText.setEditable(false);
        }

    }//GEN-LAST:event_commitRespButtonActionPerformed

    private void commitLoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commitLoginButtonActionPerformed
        // This part deals with the Variables associated with the Database Connection
        String url = "jdbc:mysql://127.0.0.1:3306/";
        String dbName = "zooProject";
        String driver = "com.mysql.jdbc.Driver";
        String userName = "root";
        String password = "nss2013";

        // This parts tries to execute the SQL statement and if it can't relays a message
        // The first section is connecting the various variables to the statement to be exectuted
        try {
            Class.forName(driver).newInstance();

            System.out.println("Connecting to the Database " + dbName + "....");
            Connection conn = DriverManager.getConnection(url + dbName, userName, password);
            System.out.println("Database Connection Successful");

            String sql = "INSERT INTO STAFF_LOGIN_DETAILS(STAFF_ID, USERNAME, PASSWORD)" +
                         " VALUES(?, ?, ?)";

            if(TitleNewStaffEntryComboBox.getSelectedItem().equals("Manager"))
            {
                m.setNewStaffID(Integer.parseInt(newStaffIdLoginText.getText()));
                m.setUsername(usernameLoginText.getText());
                m.setPassword(passwordLoginText.getText());

                prest = conn.prepareStatement(sql);
                prest.setInt(1, m.getNewStaffID());
                prest.setString(2, m.getUsername());
                prest.setString(3, m.getPassword());
                prest.executeUpdate();

                JOptionPane.showMessageDialog(null, "Login Details for " + m.getFirstName() + " " + m.getLastName() + " Have been Entered. \n" +
                                                    "Please Click on the Summary Button for Full Review of new Employee");
            }
            else if(TitleNewStaffEntryComboBox.getSelectedItem().equals("Vet"))
            {
                v.setNewStaffID(Integer.parseInt(newStaffIdLoginText.getText()));
                v.setUsername(usernameLoginText.getText());
                v.setPassword(passwordLoginText.getText());

                prest = conn.prepareStatement(sql);
                prest.setInt(1, v.getNewStaffID());
                prest.setString(2, v.getUsername());
                prest.setString(3, v.getPassword());
                prest.executeUpdate();

                JOptionPane.showMessageDialog(null, "Login Details for " + v.getFirstName() + " " + v.getLastName() + " Have been Entered. \n" +
                                                    "Please Click on the Summary Button for Full Review of new Employee");
            }
            else
            {
                cf.setNewStaffID(Integer.parseInt(newStaffIdLoginText.getText()));
                cf.setUsername(usernameLoginText.getText());
                cf.setPassword(passwordLoginText.getText());

                prest = conn.prepareStatement(sql);
                prest.setInt(1, cf.getNewStaffID());
                prest.setString(2, cf.getUsername());
                prest.setString(3, cf.getPassword());
                prest.executeUpdate();

                JOptionPane.showMessageDialog(null, "Login Details for " + cf.getFirstName() + " " + cf.getLastName() + " Have been Entered. \n" +
                                                    "Please Click on the Summary Button for Full Review of new Employee");
            }

            stepsCompleted3Image.setVisible(true);
            step1Label.setForeground(Color.black);
            step2Label.setForeground(Color.black);
            step3Label.setForeground(Color.black);
            commitLoginButton.setEnabled(false);
            newStaffIdLoginText.setEditable(false);
            usernameLoginText.setEditable(false);
            passwordLoginText.setEditable(false);

            // Close the connection to the database
            prest.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_commitLoginButtonActionPerformed

    private void backToMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToMenuButtonActionPerformed
        // Launches said frame.
        managersOptionsFrame frame =  new managersOptionsFrame();
        frame.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_backToMenuButtonActionPerformed

    private void TitleNewStaffEntryComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TitleNewStaffEntryComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TitleNewStaffEntryComboBoxActionPerformed

    private void summaryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_summaryButtonActionPerformed
        // Depending on which type of employee has been created, prints out a review of the new staff member. 
        if(TitleNewStaffEntryComboBox.getSelectedItem().equals("Manager"))
        {
        m.setHabitatName(habitatNameText.getText());
        JOptionPane.showMessageDialog(null, "SUMMARY OF EMPLOYEE CREATION:\n" + "New Staff ID: " + m.getNewStaffID() +
                                            "\nFirst Name : " + m.getFirstName() + "\nLast Name: " + m.getLastName() +
                                            "\nTitle: " + m.getTitle() + "\nJob Description: " + m.getJobDescription() + "\n" +
                                            "\nEMPLOYEE RESPONSIBILITIES: \n" + "Habitat to Work: " + m.getHabitatName() +
                                            "\nManager: " + m.getManagesArea() + "\nCan Manage Staff: " + m.canManageStaff("Yes") + "\n" + "\nLOGIN DETAILS\n" +
                                            "Username: " + m.getUsername() + "\nPassword: " + m.getPassword());
        }
        else if(TitleNewStaffEntryComboBox.getSelectedItem().equals("Vet"))
        {
        v.setHabitatName(habitatNameText.getText());
        v.setSpeciality(variableText.getText());
        JOptionPane.showMessageDialog(null, "SUMMARY OF EMPLOYEE CREATION:\n" + "New Staff ID: " + v.getNewStaffID() +
                                            "\nFirst Name : " + v.getFirstName() + "\nLast Name: " + v.getLastName() +
                                            "\nTitle: " + v.getTitle() + "\nJob Description: " + v.getJobDescription() + "\nSpecialises In: " + v.getSpeciality() + "\n" +
                                            "\nEMPLOYEE RESPONSIBILITIES: \n" + "Habitat to Work: " + v.getHabitatName() +
                                            "\nManager: " + v.getManagesArea() + "\n" + "\nLOGIN DETAILS\n" +
                                            "Username: " + v.getUsername() + "\nPassword: " + v.getPassword());
        }
        else
        {
        cf.setHabitatName(habitatNameText.getText());
        cf.setCleaningProductsRequired(variableText.getText());
        JOptionPane.showMessageDialog(null, "SUMMARY OF EMPLOYEE CREATION:\n" + "New Staff ID: " + cf.getNewStaffID() +
                                            "\nFirst Name : " + cf.getFirstName() + "\nLast Name: " + cf.getLastName() +
                                            "\nTitle: " + cf.getTitle() + "\nJob Description: " + cf.getJobDescription() + "\n" + "Can Feed Animals: " + cf.canFeedAnimals("Yes") +
                                            "\nCleaning Products Req: " + cf.getCleaningProductsRequired() +
                                            "\nCan Maintain Habitats: " + cf.canCleanArea("Yes\n") +
                                            "\nEMPLOYEE RESPONSIBILITIES: \n" + "Habitat to Work: " + cf.getHabitatName() +
                                            "\nManager: " + cf.getManagesArea() + "\n" + "\nLOGIN DETAILS\n" +
                                            "Username: " + cf.getUsername() + "\nPassword: " + cf.getPassword());
        }

        managersOptionsFrame frame = new managersOptionsFrame();
        frame.setVisible(true);
        setVisible(false);

    }//GEN-LAST:event_summaryButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new newStaffEntryFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox TitleNewStaffEntryComboBox;
    private javax.swing.JLabel backGroundImageLabel;
    private javax.swing.JButton backToMenuButton;
    private javax.swing.JButton commitLoginButton;
    private javax.swing.JButton commitRespButton;
    private javax.swing.JButton createNewStaffButton;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField firstNameText;
    private javax.swing.JButton getManagerHabitatNameButton;
    private javax.swing.JLabel habIdLabel;
    private javax.swing.JTextField habitatIdText;
    private javax.swing.JTextField habitatNameText;
    private javax.swing.JComboBox isNewManagerComboBox;
    private javax.swing.JLabel isNewManagerLabel;
    private javax.swing.JLabel jobDescLabel;
    private javax.swing.JTextField jobDescText;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameText;
    private javax.swing.JButton logOutButton;
    private javax.swing.JLabel manIdLabel;
    private javax.swing.JPanel newStaffEntryPanel;
    private javax.swing.JLabel newStaffIdLoginLabel;
    private javax.swing.JTextField newStaffIdLoginText;
    private javax.swing.JLabel newStaffIdRespLabel;
    private javax.swing.JTextField newStaffIdRespText;
    private javax.swing.JPanel newStaffLoginDetailsPanel;
    private javax.swing.JPanel newStaffResponsibilityPanel;
    private javax.swing.JLabel passwordLoginLabel;
    private javax.swing.JTextField passwordLoginText;
    private javax.swing.JButton reportToButton;
    private javax.swing.JTextField reportsToNameText;
    private javax.swing.JComboBox reportsToNewStaffEntryComboBox;
    private javax.swing.JLabel step1Label;
    private javax.swing.JLabel step2Label;
    private javax.swing.JLabel step3Label;
    private javax.swing.JLabel stepsCompleted1Image;
    private javax.swing.JLabel stepsCompleted1Label;
    private javax.swing.JLabel stepsCompleted2Image;
    private javax.swing.JLabel stepsCompleted2Label;
    private javax.swing.JLabel stepsCompleted3Image;
    private javax.swing.JLabel stepsCompleted3Label;
    private javax.swing.JPanel stepsCompletedPanel;
    private javax.swing.JButton summaryButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel usernameLoginLabel;
    private javax.swing.JTextField usernameLoginText;
    private javax.swing.JLabel variableLabel;
    private javax.swing.JTextField variableText;
    // End of variables declaration//GEN-END:variables

}