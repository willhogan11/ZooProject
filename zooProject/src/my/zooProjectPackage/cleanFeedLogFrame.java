/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * cleanFeedLogFrame.java
 *
 * Created on 26-Feb-2014, 15:12:56
 */

package my.zooProjectPackage;

import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author hogan.38774
 */
public class cleanFeedLogFrame extends javax.swing.JFrame {
       PreparedStatement prest;

    /** Creates new form cleanFeedLogFrame */
    public cleanFeedLogFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        habitatMaintLogPanel = new javax.swing.JPanel();
        getHabitatNameButton = new javax.swing.JButton();
        logHabitatCheckButton = new javax.swing.JButton();
        habitatNameLabel = new javax.swing.JLabel();
        habitatNameText = new javax.swing.JTextField();
        habitatIdLabel = new javax.swing.JLabel();
        StaffIdLabel = new javax.swing.JLabel();
        getStaffNameHabMaintLogButton = new javax.swing.JButton();
        staffNameHabMaintLogText = new javax.swing.JTextField();
        staffNameHabMaintLogLabel = new javax.swing.JLabel();
        habitatIdComboBox = new javax.swing.JComboBox();
        staffIdHabMaintLogComboBox = new javax.swing.JComboBox();
        animalFeedLogPanel = new javax.swing.JPanel();
        getAnimalNameButton = new javax.swing.JButton();
        logFeedButton = new javax.swing.JButton();
        notesScrollPane = new javax.swing.JScrollPane();
        notesTextArea = new javax.swing.JTextArea();
        animalNameLabel = new javax.swing.JLabel();
        animalNameText = new javax.swing.JTextField();
        animalIdLabel = new javax.swing.JLabel();
        notesLabel = new javax.swing.JLabel();
        staffIdLabel = new javax.swing.JLabel();
        getStaffNameAnimalFeedLogButton = new javax.swing.JButton();
        staffNameAnimalFeedLogLabel = new javax.swing.JLabel();
        staffNameAnimalFeedLogText = new javax.swing.JTextField();
        nickNameAnimalFeedLogText = new javax.swing.JTextField();
        nickNameAnimalFeedLogLabel = new javax.swing.JLabel();
        animalIdAnimalFeedLogComboBox = new javax.swing.JComboBox();
        staffIdAnimalFeedLogComboBox = new javax.swing.JComboBox();
        backButton = new javax.swing.JButton();
        logOutButton = new javax.swing.JButton();
        backgroundImageLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Feeding / Habitat Maintenance Log Frame");
        setMinimumSize(new java.awt.Dimension(595, 505));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        habitatMaintLogPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Habitat Maintenance Log", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(153, 153, 255))); // NOI18N
        habitatMaintLogPanel.setOpaque(false);

        getHabitatNameButton.setText("Get Habitat Name:");
        getHabitatNameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getHabitatNameButtonActionPerformed(evt);
            }
        });

        logHabitatCheckButton.setText("Log Habitat Check");
        logHabitatCheckButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logHabitatCheckButtonActionPerformed(evt);
            }
        });

        habitatNameLabel.setBackground(new java.awt.Color(255, 255, 255));
        habitatNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        habitatNameLabel.setText("Name:");

        habitatIdLabel.setBackground(new java.awt.Color(255, 255, 255));
        habitatIdLabel.setForeground(new java.awt.Color(255, 255, 255));
        habitatIdLabel.setText("HabitatID:");

        StaffIdLabel.setBackground(new java.awt.Color(255, 255, 255));
        StaffIdLabel.setForeground(new java.awt.Color(255, 255, 255));
        StaffIdLabel.setText("StaffID:");

        getStaffNameHabMaintLogButton.setText("Get Staff Name:");
        getStaffNameHabMaintLogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getStaffNameHabMaintLogButtonActionPerformed(evt);
            }
        });

        staffNameHabMaintLogLabel.setBackground(new java.awt.Color(255, 255, 255));
        staffNameHabMaintLogLabel.setForeground(new java.awt.Color(255, 255, 255));
        staffNameHabMaintLogLabel.setText("Name:");

        habitatIdComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Please Select..." }));
        habitatIdComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                habitatIdComboBoxActionPerformed(evt);
            }
        });

        staffIdHabMaintLogComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Please Select..." }));
        staffIdHabMaintLogComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffIdHabMaintLogComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout habitatMaintLogPanelLayout = new javax.swing.GroupLayout(habitatMaintLogPanel);
        habitatMaintLogPanel.setLayout(habitatMaintLogPanelLayout);
        habitatMaintLogPanelLayout.setHorizontalGroup(
            habitatMaintLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, habitatMaintLogPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(habitatMaintLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(habitatMaintLogPanelLayout.createSequentialGroup()
                        .addGroup(habitatMaintLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(StaffIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(habitatNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(habitatIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(habitatMaintLogPanelLayout.createSequentialGroup()
                        .addComponent(staffNameHabMaintLogLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                        .addGap(23, 23, 23)))
                .addGroup(habitatMaintLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(habitatMaintLogPanelLayout.createSequentialGroup()
                        .addComponent(logHabitatCheckButton)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, habitatMaintLogPanelLayout.createSequentialGroup()
                        .addGroup(habitatMaintLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(getHabitatNameButton, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(habitatNameText, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(getStaffNameHabMaintLogButton, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(staffNameHabMaintLogText, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(habitatIdComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, 142, Short.MAX_VALUE)
                            .addComponent(staffIdHabMaintLogComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, 142, Short.MAX_VALUE))
                        .addGap(34, 34, 34))))
        );

        habitatMaintLogPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {getHabitatNameButton, getStaffNameHabMaintLogButton, habitatNameText, logHabitatCheckButton, staffNameHabMaintLogText});

        habitatMaintLogPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {StaffIdLabel, habitatIdLabel, habitatNameLabel, staffNameHabMaintLogLabel});

        habitatMaintLogPanelLayout.setVerticalGroup(
            habitatMaintLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(habitatMaintLogPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(habitatMaintLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(habitatIdLabel)
                    .addComponent(habitatIdComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(getHabitatNameButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(habitatMaintLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(habitatNameLabel)
                    .addComponent(habitatNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(habitatMaintLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StaffIdLabel)
                    .addComponent(staffIdHabMaintLogComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(getStaffNameHabMaintLogButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(habitatMaintLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staffNameHabMaintLogLabel)
                    .addComponent(staffNameHabMaintLogText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(logHabitatCheckButton)
                .addContainerGap())
        );

        getContentPane().add(habitatMaintLogPanel);
        habitatMaintLogPanel.setBounds(310, 20, 250, 320);

        animalFeedLogPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Animal Feed Log", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(153, 153, 255))); // NOI18N
        animalFeedLogPanel.setOpaque(false);

        getAnimalNameButton.setText("Get Animal Names:");
        getAnimalNameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getAnimalNameButtonActionPerformed(evt);
            }
        });

        logFeedButton.setText("Log Feed");
        logFeedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logFeedButtonActionPerformed(evt);
            }
        });

        notesTextArea.setColumns(20);
        notesTextArea.setRows(5);
        notesScrollPane.setViewportView(notesTextArea);

        animalNameLabel.setBackground(new java.awt.Color(255, 255, 255));
        animalNameLabel.setText("Name:");

        animalNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                animalNameTextActionPerformed(evt);
            }
        });

        animalIdLabel.setBackground(new java.awt.Color(255, 255, 255));
        animalIdLabel.setText("AnimalID:");

        notesLabel.setBackground(new java.awt.Color(0, 0, 0));
        notesLabel.setText("Notes:");

        staffIdLabel.setBackground(new java.awt.Color(255, 255, 255));
        staffIdLabel.setText("StaffID:");

        getStaffNameAnimalFeedLogButton.setText("Get Staff Name:");
        getStaffNameAnimalFeedLogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getStaffNameAnimalFeedLogButtonActionPerformed(evt);
            }
        });

        staffNameAnimalFeedLogLabel.setText("Name:");

        nickNameAnimalFeedLogLabel.setText("Nickname:");

        animalIdAnimalFeedLogComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Please Select..." }));

        staffIdAnimalFeedLogComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Please Select..." }));
        staffIdAnimalFeedLogComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffIdAnimalFeedLogComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout animalFeedLogPanelLayout = new javax.swing.GroupLayout(animalFeedLogPanel);
        animalFeedLogPanel.setLayout(animalFeedLogPanelLayout);
        animalFeedLogPanelLayout.setHorizontalGroup(
            animalFeedLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(animalFeedLogPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(animalFeedLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(animalFeedLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(animalIdLabel)
                        .addComponent(animalNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(nickNameAnimalFeedLogLabel)
                        .addComponent(staffIdLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(notesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(staffNameAnimalFeedLogLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(animalFeedLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(animalFeedLogPanelLayout.createSequentialGroup()
                        .addComponent(notesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(animalFeedLogPanelLayout.createSequentialGroup()
                        .addComponent(logFeedButton, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(animalFeedLogPanelLayout.createSequentialGroup()
                        .addGroup(animalFeedLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(getStaffNameAnimalFeedLogButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(staffNameAnimalFeedLogText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                            .addComponent(animalNameText, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(getAnimalNameButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                            .addComponent(nickNameAnimalFeedLogText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                            .addComponent(animalIdAnimalFeedLogComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(staffIdAnimalFeedLogComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(45, 45, 45))))
        );

        animalFeedLogPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {animalNameText, getAnimalNameButton, getStaffNameAnimalFeedLogButton, logFeedButton, nickNameAnimalFeedLogText, notesScrollPane, staffNameAnimalFeedLogText});

        animalFeedLogPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {animalIdLabel, animalNameLabel, nickNameAnimalFeedLogLabel, notesLabel, staffIdLabel, staffNameAnimalFeedLogLabel});

        animalFeedLogPanelLayout.setVerticalGroup(
            animalFeedLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(animalFeedLogPanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(animalFeedLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(animalIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                    .addComponent(animalIdAnimalFeedLogComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(getAnimalNameButton, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(animalFeedLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(animalNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(animalNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(animalFeedLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nickNameAnimalFeedLogText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nickNameAnimalFeedLogLabel))
                .addGap(38, 38, 38)
                .addGroup(animalFeedLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staffIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                    .addComponent(staffIdAnimalFeedLogComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(getStaffNameAnimalFeedLogButton)
                .addGap(6, 6, 6)
                .addGroup(animalFeedLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staffNameAnimalFeedLogText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(staffNameAnimalFeedLogLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(animalFeedLogPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(notesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                    .addComponent(notesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logFeedButton))
        );

        getContentPane().add(animalFeedLogPanel);
        animalFeedLogPanel.setBounds(20, 20, 270, 400);

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        getContentPane().add(backButton);
        backButton.setBounds(120, 430, 70, 23);

        logOutButton.setText("Log Out");
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });
        getContentPane().add(logOutButton);
        logOutButton.setBounds(390, 430, 90, 23);

        backgroundImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/babyElephant(edited).jpg"))); // NOI18N
        getContentPane().add(backgroundImageLabel);
        backgroundImageLabel.setBounds(0, 0, 580, 470);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-597)/2, (screenSize.height-507)/2, 597, 507);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        staffNameHabMaintLogText.setEditable(false);
        staffNameAnimalFeedLogText.setEditable(false);
        habitatNameText.setEditable(false);
        animalNameText.setEditable(false);
        nickNameAnimalFeedLogText.setEditable(false);


        String url = "jdbc:mysql://127.0.0.1:3306/";
        String dbName = "zooProject";
        String driver = "com.mysql.jdbc.Driver";
        String userName = "root";
        String password = "nss2013";

        try {
            Class.forName(driver).newInstance();

            System.out.println("Connecting to the Database " + dbName + "....");
            Connection conn = DriverManager.getConnection(url + dbName, userName, password);
            System.out.println("Database Connection Successful");

                // Set up a create statement
              java.sql.Statement stmn = conn.createStatement();
              // Set Up SQL
              String sql = "SELECT * FROM ANIMAL";
              // Excute Query and send result set to rs
              ResultSet rs = stmn.executeQuery(sql);
            while (rs.next()) {
                // Retrieve by column name
                String ANIMAL_ID = rs.getString("ANIMAL_ID");
                cleanFeedLogFrame.animalIdAnimalFeedLogComboBox.addItem(ANIMAL_ID);
            }
            // Close the connection to the database
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }





        try {
            Class.forName(driver).newInstance();

            System.out.println("Connecting to the Database " + dbName + "....");
            Connection conn = DriverManager.getConnection(url + dbName, userName, password);
            System.out.println("Database Connection Successful");

                // Set up a create statement
              java.sql.Statement stmn = conn.createStatement();
              // Set Up SQL
              String sql = "SELECT * FROM STAFF WHERE TITLE != 'Vet'";
              // Excute Query and send result set to rs
              ResultSet rs = stmn.executeQuery(sql);
            while (rs.next()) {
                // Retrieve by column name
                String STAFF_ID = rs.getString("STAFF_ID");
                cleanFeedLogFrame.staffIdAnimalFeedLogComboBox.addItem(STAFF_ID);
            }
            // Close the connection to the database
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }




     try {
            Class.forName(driver).newInstance();

            System.out.println("Connecting to the Database " + dbName + "....");
            Connection conn = DriverManager.getConnection(url + dbName, userName, password);
            System.out.println("Database Connection Successful");

                // Set up a create statement
              java.sql.Statement stmn = conn.createStatement();
              // Set Up SQL
              String sql = "SELECT * FROM ZOO_HABITAT";
              // Excute Query and send result set to rs
              ResultSet rs = stmn.executeQuery(sql);
            while (rs.next()) {
                // Retrieve by column name
                String HABITAT_ID = rs.getString("HABITAT_ID");
                cleanFeedLogFrame.habitatIdComboBox.addItem(HABITAT_ID);
            }
            // Close the connection to the database
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }





        try {
            Class.forName(driver).newInstance();

            System.out.println("Connecting to the Database " + dbName + "....");
            Connection conn = DriverManager.getConnection(url + dbName, userName, password);
            System.out.println("Database Connection Successful");

                // Set up a create statement
              java.sql.Statement stmn = conn.createStatement();
              // Set Up SQL
              String sql = "SELECT * FROM STAFF WHERE TITLE != 'Vet'";
              // Excute Query and send result set to rs
              ResultSet rs = stmn.executeQuery(sql);
            while (rs.next()) {
                // Retrieve by column name
                String STAFF_ID = rs.getString("STAFF_ID");
                cleanFeedLogFrame.staffIdHabMaintLogComboBox.addItem(STAFF_ID);
            }
            // Close the connection to the database
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowOpened

    private void logFeedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logFeedButtonActionPerformed

        String url = "jdbc:mysql://127.0.0.1:3306/";
        String dbName = "zooProject";
        String driver = "com.mysql.jdbc.Driver";
        String userName = "root";
        String password = "nss2013";

        if(animalNameText.getText().equals("") || nickNameAnimalFeedLogText.getText().equals("") || staffNameAnimalFeedLogText.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "You are missing a Required Field");
        }
        else
        {
            try
            {
                Class.forName(driver).newInstance();

                System.out.println("Connecting to the Database " + dbName + "....");
                Connection conn = DriverManager.getConnection(url + dbName, userName, password);
                System.out.println("Database Connection Successful");

                String sql = "INSERT INTO FEEDING_LOG(ANIMAL_ID, STAFF_ID, NOTES) VALUES(?, ?, ?)";
                // Set up a create statement
                prest = conn.prepareStatement(sql);
                // Set Up SQL
                prest.setString(1,(String) animalIdAnimalFeedLogComboBox.getSelectedItem());
                prest.setString(2,(String) staffIdAnimalFeedLogComboBox.getSelectedItem());
                prest.setString(3, notesTextArea.getText());

                prest.executeUpdate();
                JOptionPane.showMessageDialog(null, "Insert Successful");

                animalIdAnimalFeedLogComboBox.setSelectedItem("Please Select...");
                staffIdAnimalFeedLogComboBox.setSelectedItem("Please Select...");
                animalNameText.setText("");
                nickNameAnimalFeedLogText.setText("");
                staffNameAnimalFeedLogText.setText("");
                notesTextArea.setText("");
                
            // Close the connection to the database
            conn.close();
        } 
            catch (Exception e)
            {
            e.printStackTrace();
        }
        }
}//GEN-LAST:event_logFeedButtonActionPerformed

    private void logHabitatCheckButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logHabitatCheckButtonActionPerformed
        String url = "jdbc:mysql://127.0.0.1:3306/";
        String dbName = "zooProject";
        String driver = "com.mysql.jdbc.Driver";
        String userName = "root";
        String password = "nss2013";


        if(habitatNameText.getText().equals("") || staffNameHabMaintLogText.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "You are missing a Required Field");
        }
        else
        {
            try {
                Class.forName(driver).newInstance();

                System.out.println("Connecting to the Database " + dbName + "....");
                Connection conn = DriverManager.getConnection(url + dbName, userName, password);
                System.out.println("Database Connection Successful");

                String sql = "INSERT INTO STAFF_HAB_MAINT(HABITAT_ID, STAFF_ID) VALUES(?, ?)";
                // Set up a create statement
                prest = conn.prepareStatement(sql);
                // Set Up SQL
                prest.setString(1,(String) habitatIdComboBox.getSelectedItem());
                prest.setString(2,(String) staffIdHabMaintLogComboBox.getSelectedItem());

                prest.executeUpdate();
                JOptionPane.showMessageDialog(null, "Insert Successful");

                habitatIdComboBox.setSelectedItem("Please Select...");
                staffIdHabMaintLogComboBox.setSelectedItem("Please Select...");
                habitatNameText.setText("");
                staffNameHabMaintLogText.setText("");

               // Close the connection to the database
                conn.close();
            }
            catch (Exception e)
            {
                e.printStackTrace();
            }
        }
}//GEN-LAST:event_logHabitatCheckButtonActionPerformed

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        // When this button is clicked a New Frame Object called Frame is created & the User
        // is returned to the Main login Frame.
        loginFrame frame = new loginFrame();
        frame.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_logOutButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        cleanerFeederOptionsFrame frame = new cleanerFeederOptionsFrame();
        frame.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed

    private void getHabitatNameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getHabitatNameButtonActionPerformed
          String url = "jdbc:mysql://127.0.0.1:3306/";
        String dbName = "zooProject";
        String driver = "com.mysql.jdbc.Driver";
        String userName = "root";
        String password = "nss2013";


        try {
            Class.forName(driver).newInstance();

            System.out.println("Connecting to the Database " + dbName + "....");
            Connection conn = DriverManager.getConnection(url + dbName, userName, password);
            System.out.println("Database Connection Successful");

                // Set up a create statement
              java.sql.Statement stmn = conn.createStatement();
              // Set Up SQL
              String sql = "SELECT * FROM ZOO_HABITAT WHERE HABITAT_ID = " + habitatIdComboBox.getSelectedItem();
              // Excute Query and send result set to rs
              ResultSet rs = stmn.executeQuery(sql);
            while (rs.next()) {
                // Retrieve by column name
                String ZOO_HAB = rs.getString("ZOO_HAB");
                habitatNameText.setText(ZOO_HAB);
            }
            // Close the connection to the database
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_getHabitatNameButtonActionPerformed

    private void getAnimalNameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getAnimalNameButtonActionPerformed
        String url = "jdbc:mysql://127.0.0.1:3306/";
        String dbName = "zooProject";
        String driver = "com.mysql.jdbc.Driver";
        String userName = "root";
        String password = "nss2013";


        try {
            Class.forName(driver).newInstance();

            System.out.println("Connecting to the Database " + dbName + "....");
            Connection conn = DriverManager.getConnection(url + dbName, userName, password);
            System.out.println("Database Connection Successful");

                // Set up a create statement
              java.sql.Statement stmn = conn.createStatement();
              // Set Up SQL
              String sql = "SELECT * FROM ANIMAL WHERE ANIMAL_ID = " + animalIdAnimalFeedLogComboBox.getSelectedItem();
              // Excute Query and send result set to rs
              ResultSet rs = stmn.executeQuery(sql);
            while (rs.next()) {
                // Retrieve by column name
                String COMMON_NAME = rs.getString("COMMON_NAME");
                String NICKNAME = rs.getString("NICKNAME");
                animalNameText.setText(COMMON_NAME);
                nickNameAnimalFeedLogText.setText(NICKNAME);
            }
            // Close the connection to the database
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_getAnimalNameButtonActionPerformed

    private void getStaffNameAnimalFeedLogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getStaffNameAnimalFeedLogButtonActionPerformed
        String url = "jdbc:mysql://127.0.0.1:3306/";
        String dbName = "zooProject";
        String driver = "com.mysql.jdbc.Driver";
        String userName = "root";
        String password = "nss2013";


        try {
            Class.forName(driver).newInstance();

            System.out.println("Connecting to the Database " + dbName + "....");
            Connection conn = DriverManager.getConnection(url + dbName, userName, password);
            System.out.println("Database Connection Successful");

                // Set up a create statement
              java.sql.Statement stmn = conn.createStatement();
              // Set Up SQL
              String sql = "SELECT * FROM STAFF WHERE STAFF_ID = " + staffIdAnimalFeedLogComboBox.getSelectedItem();
              // Excute Query and send result set to rs
              ResultSet rs = stmn.executeQuery(sql);
            while (rs.next()) {
                // Retrieve by column name
                String FIRST_NAME = rs.getString("FIRST_NAME");
                //cf.setName(rs.getString("LAST_NAME"));
                String LAST_NAME = rs.getString("LAST_NAME");
                staffNameAnimalFeedLogText.setText(FIRST_NAME + " " + LAST_NAME);
                // staffNameAnimalFeedLogText.setText(cf.getName() + " " + LAST_NAME);
            }
            // Close the connection to the database
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_getStaffNameAnimalFeedLogButtonActionPerformed

    private void getStaffNameHabMaintLogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getStaffNameHabMaintLogButtonActionPerformed
          String url = "jdbc:mysql://127.0.0.1:3306/";
        String dbName = "zooProject";
        String driver = "com.mysql.jdbc.Driver";
        String userName = "root";
        String password = "nss2013";


        try {
            Class.forName(driver).newInstance();

            System.out.println("Connecting to the Database " + dbName + "....");
            Connection conn = DriverManager.getConnection(url + dbName, userName, password);
            System.out.println("Database Connection Successful");

                // Set up a create statement
              java.sql.Statement stmn = conn.createStatement();
              // Set Up SQL
              String sql = "SELECT * FROM STAFF WHERE STAFF_ID = " + staffIdHabMaintLogComboBox.getSelectedItem();
              // Excute Query and send result set to rs
              ResultSet rs = stmn.executeQuery(sql);
            while (rs.next()) {
                // Retrieve by column name
                String FIRST_NAME = rs.getString("FIRST_NAME");
                String LAST_NAME = rs.getString("LAST_NAME");
                staffNameHabMaintLogText.setText(FIRST_NAME + " " + LAST_NAME);
            }
            // Close the connection to the database
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_getStaffNameHabMaintLogButtonActionPerformed

    private void habitatIdComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_habitatIdComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_habitatIdComboBoxActionPerformed

    private void staffIdHabMaintLogComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffIdHabMaintLogComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_staffIdHabMaintLogComboBoxActionPerformed

    private void staffIdAnimalFeedLogComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffIdAnimalFeedLogComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_staffIdAnimalFeedLogComboBoxActionPerformed

    private void animalNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_animalNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_animalNameTextActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cleanFeedLogFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel StaffIdLabel;
    public static javax.swing.JPanel animalFeedLogPanel;
    public static javax.swing.JComboBox animalIdAnimalFeedLogComboBox;
    private javax.swing.JLabel animalIdLabel;
    private javax.swing.JLabel animalNameLabel;
    public static javax.swing.JTextField animalNameText;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel backgroundImageLabel;
    private javax.swing.JButton getAnimalNameButton;
    private javax.swing.JButton getHabitatNameButton;
    private javax.swing.JButton getStaffNameAnimalFeedLogButton;
    private javax.swing.JButton getStaffNameHabMaintLogButton;
    public static javax.swing.JComboBox habitatIdComboBox;
    private javax.swing.JLabel habitatIdLabel;
    public static javax.swing.JPanel habitatMaintLogPanel;
    private javax.swing.JLabel habitatNameLabel;
    private javax.swing.JTextField habitatNameText;
    private javax.swing.JButton logFeedButton;
    private javax.swing.JButton logHabitatCheckButton;
    private javax.swing.JButton logOutButton;
    private javax.swing.JLabel nickNameAnimalFeedLogLabel;
    private javax.swing.JTextField nickNameAnimalFeedLogText;
    private javax.swing.JLabel notesLabel;
    private javax.swing.JScrollPane notesScrollPane;
    private javax.swing.JTextArea notesTextArea;
    public static javax.swing.JComboBox staffIdAnimalFeedLogComboBox;
    public static javax.swing.JComboBox staffIdHabMaintLogComboBox;
    private javax.swing.JLabel staffIdLabel;
    private javax.swing.JLabel staffNameAnimalFeedLogLabel;
    private javax.swing.JTextField staffNameAnimalFeedLogText;
    private javax.swing.JLabel staffNameHabMaintLogLabel;
    private javax.swing.JTextField staffNameHabMaintLogText;
    // End of variables declaration//GEN-END:variables

}
